export const textToBlob = async () => {
    let data
    let buff = Buffer.from(data)
    let base64data = buff.toString('base64');
    console.log('BASE64DATA', base64data);

    const base64 = await fetch(base64data);
    const base64Response = await fetch(`data:image/jpeg;base64,${base64data}`);
    console.log('RESPONSE', base64);
    console.log('BASE64RESPONSE', base64Response);
    const myblob = await base64.blob();

    console.log('BLOB', myblob);
    let url = URL.createObjectURL(myblob);

    return url;
}

export const textToBlob2 = () => {
    let data
    let ab = new ArrayBuffer(data.length); //bytes is the array with the integer
    let ia = new Uint8Array(ab);

    for (var i = 0; i < data.length; i++) {
    ia[i] = data[i];
    }
console.log(ia);
    // const blob = new Blob([ia], {type: "application/octet-stream"});
    const blob = new Blob([ia], {type: "image/jpeg"});
    console.log('__BLOB__', blob)
    let url = URL.createObjectURL(blob);

    return url;
}

function hexToInt(hexString){

}